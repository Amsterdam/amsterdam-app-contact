trigger:
  batch: true
  branches:
    include:
      - main

resources:
  - repo: self

# variables:
#   - group: acr-test
#   # Container registry service connection established during pipeline creation
#   - name: dockerRegistryServiceConnection
#     value: $(docker-registry-service-connection)
#   - name: imageRepository
#     value: "amsterdam-app-contact"
#   - name: containerRegistry
#     value: $(container-registry)
#   - name: dockerfilePath
#     value: "$(Build.SourcesDirectory)/Dockerfile"
#   - name: tag
#     value: "$(Build.BuildNumber)"
#   # Agent VM image name
#   - name: vmImageName
#     value: "ubuntu-latest"

pool: containerBuilder

variables:
  RegistryName: saks01weuacrpgpgo5qvmwo
  RepositoryName: aapp/images
  ImageName: contact
  ImageVersion: 1.0.2
  HELM_EXPERIMENTAL_OCI: 1  
  
          
stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        steps:
        - task: Bash@3
          displayName: Build and push an image to container registry
          inputs:
              targetType: 'inline'
              script: |
                    az login --identity
                    az acr login --name $(RegistryName)
                    az acr repository list --name $(RegistryName)
                    docker build -t $(RegistryName).azurecr.io/$(RepositoryName)/$(ImageName):$(ImageVersion) .
                    docker push $(RegistryName).azurecr.io/$(RepositoryName)/$(ImageName):$(ImageVersion)
                    #az acr repository show -n $(RegistryName) --repository $(RepositoryName)
                    az acr repository show-tags --name $(RegistryName) --repository $(RepositoryName)/$(ImageName)

      - job: "Push_to_Github"
        timeoutInMinutes: 30
        pool:
          vmImage: macOS-12
        variables:
          - group: github-authorization
        steps:
          - template: ./pipelines/templates/push-repo-to-github.yml
            parameters:
              repository: "amsterdam-app-contact"
              sshKeySecureFile: "Contact-github-ssh"
              sshPublicKey: $(sshPublicKeyContact)
